// This class was generated by the JAXRPC SI, do not edit.
// Contents subject to change without notice.
// JAX-RPC Standard Implementation (1.1.3, build R2)
// Generated source version: 1.1.3

package com.bilionix.sms4b.client;

import com.sun.xml.rpc.encoding.*;
import com.sun.xml.rpc.encoding.literal.LiteralObjectSerializerBase;
import com.sun.xml.rpc.streaming.XMLReader;
import com.sun.xml.rpc.streaming.XMLReaderUtil;
import com.sun.xml.rpc.streaming.XMLWriter;

import javax.xml.namespace.QName;

public class CheckSMSResponse_LiteralSerializer extends LiteralObjectSerializerBase implements Initializable  {
    private static final QName ns1_CheckSMSResult_QNAME = new QName("SMS4B", "CheckSMSResult");
    private static final QName ns1_CheckSMSResult_TYPE_QNAME = new QName("SMS4B", "CheckSMSResult");
    private CombinedSerializer ns1_myCheckSMSResult_LiteralSerializer;

    public CheckSMSResponse_LiteralSerializer(QName type, String encodingStyle) {
        this(type, encodingStyle, false);
    }

    public CheckSMSResponse_LiteralSerializer(QName type, String encodingStyle, boolean encodeType) {
        super(type, true, encodingStyle, encodeType);
    }

    public void initialize(InternalTypeMappingRegistry registry) throws Exception {
        ns1_myCheckSMSResult_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.bilionix.sms4b.client.CheckSMSResult.class, ns1_CheckSMSResult_TYPE_QNAME);
    }

    public Object doDeserialize(XMLReader reader,
        SOAPDeserializationContext context) throws Exception {
        com.bilionix.sms4b.client.CheckSMSResponse instance = new com.bilionix.sms4b.client.CheckSMSResponse();
        Object member;
        QName elementName;

        reader.nextElementContent();
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_CheckSMSResult_QNAME)) {
                member = ns1_myCheckSMSResult_LiteralSerializer.deserialize(ns1_CheckSMSResult_QNAME, reader, context);
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull");
                }
                instance.setCheckSMSResult((com.bilionix.sms4b.client.CheckSMSResult)member);
                reader.nextElementContent();
            } else {
                throw new DeserializationException("literal.unexpectedElementName", new Object[] { ns1_CheckSMSResult_QNAME, reader.getName() });
            }
        }
        else {
            throw new DeserializationException("literal.expectedElementName", reader.getName().toString());
        }

        XMLReaderUtil.verifyReaderState(reader, XMLReader.END);
        return instance;
    }

    public void doSerializeAttributes(Object obj, XMLWriter writer, SOAPSerializationContext context) throws Exception {
        com.bilionix.sms4b.client.CheckSMSResponse instance = (com.bilionix.sms4b.client.CheckSMSResponse)obj;

    }
    public void doSerialize(Object obj, XMLWriter writer, SOAPSerializationContext context) throws Exception {
        com.bilionix.sms4b.client.CheckSMSResponse instance = (com.bilionix.sms4b.client.CheckSMSResponse)obj;
        
        if (instance.getCheckSMSResult() == null) {
            throw new SerializationException("literal.unexpectedNull");
        }
        ns1_myCheckSMSResult_LiteralSerializer.serialize(instance.getCheckSMSResult(), ns1_CheckSMSResult_QNAME, null, writer, context);
    }
}
